@charset "UTF-8";

body {
	margin: 0;
}

html, body, #main {
	/* this make the address bar always appears, and whole page is still revealed.*/
	height: 100%;
}

#main {
	/*height: 100vh;*//* replaced by above */
	width: 100vw;
	display: flex;
	flex-direction: column;
}

#upperDiv, #lowerDiv {
	width: 100%;
	display: flex;
	flex-direction: row;
}

#upperDiv {
	height: 40%;
}
#lowerDiv, #keyboard{
	flex: 1;
}

#lengthPad, #auxPad, #displayer, #keyboard, #keyboardSetting{
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-content: center;
	margin: 5px;
}
#lengthPad, #displayer {
	max-width: 35%;
	flex-wrap: nowrap;
	align-content: stretch;
}
#keyboard {
	overflow: hidden;
	margin: 0;
	background: lightgray;
}

#keyboardSetting{
	width: 30px;
}
#auxPad{
	flex: 1;
	align-content: center;
	align-items: center;
}

#connectNote, #restNote {
	content: "模式:";
	flex-direction: column;
	justify-content: center;
	padding: 3px;
}
#connectNote img{
	display: none;
}
#connectNote::before {
	content: "Mode";
	color: #555;
	font-size: 0.6em;
}
#connectNote::after {
	/*content: "錯誤";
	color: darkred;*/
}
#connectNote[data-mode="add"]::after, #connectNote::after {
	content: "新增";
}
#connectNote[data-mode="cont"]::after {
	content: "延長";
}
#connectNote[data-mode="tie"]::after {
	content: "連結";
}
#connectNote[data-mode="add"]::after, #connectNote[data-mode="cont"]::after, #connectNote[data-mode="tie"]::after {
	color: black;
}

#restNote::after {
	content: "休止符";
	font-size: 0.6em;
}

/* message boxes and screens*/

#noteEditPanel {
	flex-direction: column;
	padding: 3px;
}

#ABCNote {
	flex: 1;
	font-family: monospace;
}

#noteEditButtons {
	display: flex;
	justify-content: space-around;	
}

.button {
	border: outset 1px;
	background: lightgray;
	box-sizing: border-box;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 50px;
	height: 50px;
}

.button img {
	max-height: 50%;
	max-width: 50%;
}

.small-button {
	width: 24px;
	height: 24px;
}

.length-pad-row {
	width: 100%;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-content: stretch;
}

.length-button {
	width: 20%;
	min-width: 35px;
	max-width: 40%;
	height: initial;
	font-weight: bolder;
}
.length-button::before, .length-button.div3::after {
	font-size: 50%;
	font-weight: normal;
	color: gray;
	position: relative;
}
.length-button::before {
	content: "1/";
	top: -1em;
}
.length-button.div3::after {
	/*content: "x3";*/
	top: 0.5em;
}

.keyboard-key {
	position: absolute;
	box-sizing: border-box;
	border: 0px solid black;
	border-width: 1px;
	background: white;
	color: black;
	z-index : 0;
	display: flex;
	flex-direction: column-reverse;
	align-items: center;
}

.keyboard-key:not(.black-key) {
	border-width: 1px 1px 1px 0;
}

.keyboard-key.black-key:first-child + .keyboard-key:not(.black-key),
.keyboard-key:not(.black-key):first-child {
	border-width: 1px;
}

.keyboard-key:after, .key-name  {
	content: attr(data-pitchname);
	margin-bottom: 1em;
	font-size: 0.7em;
}

.black-key {
	background: black;
	color: white;
	z-index: 1;
}

.key-name {
	display: none;
}

/*.keyboard-key:active, .button:active,*/ .keyboard-key.pressed, .button.pressed {
	background: gray;
}

/* Tabs Of Message*/



.tab-set {
	
	display: flex; 
	flex-direction: row;
	align-items: stretch;
	
	position: relative;   
	/*min-height: 200px; /* This part sucks */
	clear: both;
	margin: 25px 0;
}
.tab {
	float: left;
}

.tab-label-row {
	flex-basis: 40px;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.tab-label {
	width: initial;
	border: solid white 1px;
	background: #eee;
}

.tab-label[data-select="true"] {
	background: white;
	border-style: solid;
	border-color: black;
	border-right: none;
	position: relative;
	left: 1px;
}

.tab-content-box  {
	flex: 1;
}

.tab-content {
	display: none;
	height: 100%;
	width: 100%;
	border: 1px solid black;
	box-sizing: border-box;
	overflow: hidden;
}

.tab-content[data-select="true"] {
	display: flex;
}

/* Tabs Of Message: End */

.message-div {
	background: white;
	color: black;
}

.message-screen {
	border: 1px inset;
	overflow: auto;
	overflow-wrap: normal;
}

.no-select {
	-moz-user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

.can-select {
	-moz-user-select: initial;
	-webkit-user-select: initial;
	-ms-user-select: initial;
	user-select: initial;
}
.cylon_eye {
  background-color: red;
  animation: 4s linear 0s infinite alternate move_eye;
}

@-webkit-keyframes blink { 0% { opacity:1; } 50% { opacity:1; } 100% { opacity:0; } }
        @keyframes blink { 0% { opacity:1; } 50% { opacity:1; } 100% { opacity:0; } }

.edit-cursor{
	display: inline-block;
	width: 0;
}

.edit-cursor * {
	border-left: red solid 1px;
	-webkit-animation: 0.5s step-start 0s infinite alternate blink;
	        animation: 0.5s step-start 0s infinite alternate blink;
}
.edit-cursor *::after {
	content: "."; /* a dummy */
	visibility: hidden;
}

.note {
	
}

.note::after {
	content: " ";
}

.debug-mark {
	outline: 5px dashed black;
	outline-offset: -5px;
}

.hide {
	display: none;
}